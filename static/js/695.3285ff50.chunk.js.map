{"version":3,"file":"static/js/695.3285ff50.chunk.js","mappings":"2NACA,EAAuB,sBAAvB,EAAoD,sBAApD,EAAmF,wB,SCmCnF,EA/BgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAOA,IANAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,gBACmB,CAAEN,QAAAA,IAClBO,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcJ,EAAWI,EAAKC,QAA9B,GACT,GAAE,CAACT,KAECG,EACH,OAAO,8CAGT,IAAMO,EAAaP,EAAQQ,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OAC7B,gBAAaC,UAAWC,EAAxB,WACE,uCAAeJ,MACf,cAAGG,UAAWC,EAAd,SAA2BH,MAFpBC,EADoB,IAO/B,OACE,yBACGX,EAAQc,OAAS,GAChB,eAAIF,UAAWC,EAAf,SAA0BN,KAE1B,sEAIP,C,0BC9BKQ,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QALY,sCASVC,EAAa,CACjBC,IAAK,MACLC,MAAO,QACPC,GAAI,KACJC,OAAQ,UAGJC,EAAc,CAClBC,IAAK,MACLC,KAAM,QAsCFxB,EAAM,CACViB,WAAAA,EACAK,YAAAA,EACAG,YAtCkB,WAIR,IAAD,yDAAP,CAAC,EAAM,IAHTC,KAAAA,OAGS,MAHF,EAGE,MAFTC,UAAAA,OAES,MAFGV,EAAWE,MAEd,MADTS,WAAAA,OACS,MADIN,EAAYE,KAChB,EACT,OAAOZ,EAASiB,IAAT,oBAA0BF,EAA1B,YAAuCC,GAAc,CAC1Db,OAAQ,CAAEW,KAAAA,IAEb,EA+BCI,UA7BgB,SAAC,GAAyB,IAAD,IAAtBJ,KAAAA,OAAsB,MAAf,EAAe,EAAZK,EAAY,EAAZA,MAC7B,OAAOnB,EAASiB,IAAI,gBAAiB,CAAEd,OAAQ,CAAEW,KAAAA,EAAMK,MAAAA,IACxD,EA4BCC,gBA1BsB,SAAC,GAAiB,IAAftC,EAAc,EAAdA,QACzB,OAAOkB,EAASiB,IAAT,iBAAuBnC,IAAWuC,OAAM,SAAAC,GAC7C,GAAKA,EAAMC,SAASC,OAAS,IAC3B,MAAMC,MAAM,oCAAD,OAAqC3C,IAGlD,MAAMwC,CACP,GACF,EAmBCI,gBAjBsB,SAAC,GAAiB,IAAf5C,EAAc,EAAdA,QACzB,OAAOkB,EAASiB,IAAT,iBAAuBnC,EAAvB,YACR,EAgBC6C,gBAdsB,SAAC,GAAiB,IAAf7C,EAAc,EAAdA,QACzB,OAAOkB,EAASiB,IAAT,iBAAuBnC,EAAvB,YACR,EAaC8C,aAXmB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,IAASC,KAAAA,OAAT,MAAgB,IAAhB,EAAqBC,EAArB,EAAqBA,YAArB,OACnBF,EAAI,sCAAkCC,GAAlC,OAAyCD,GAASE,CADnC,GAcrB,K","sources":["webpack://goit-react-hw-05-movies/./src/components/Reviews/reviews.module.scss?1d70","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"reviews_list__os8JX\",\"item\":\"reviews_item__+8P2+\",\"review\":\"reviews_review__H5Hhx\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from 'services/api';\nimport css from './reviews.module.scss';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n  useEffect(() => {\n    api\n      .getMovieReviews({ movieId })\n      .then(({ data }) => setReviews(data.results));\n  }, [movieId]);\n\n  if (!reviews) {\n    return <p>Loading content...</p>;\n  }\n\n  const reviewList = reviews.map(({ author, content, id }) => (\n    <li key={id} className={css.item}>\n      <span>Author: {author}</span>\n      <p className={css.review}>{content}</p>\n    </li>\n  ));\n\n  return (\n    <div>\n      {reviews.length > 0 ? (\n        <ol className={css.list}>{reviewList}</ol>\n      ) : (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = '06ae09073235b2b05f047c5928d7f44e';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nconst MEDIA_TYPE = {\n  all: 'all',\n  movie: 'movie',\n  tv: 'tv',\n  person: 'person',\n};\n\nconst TIME_WINDOW = {\n  day: 'day',\n  week: 'week',\n};\n\nconst getTrending = ({\n  page = 1,\n  mediaType = MEDIA_TYPE.movie,\n  timeWindow = TIME_WINDOW.week,\n} = {}) => {\n  return instance.get(`/trending/${mediaType}/${timeWindow}`, {\n    params: { page },\n  });\n};\n\nconst getMovies = ({ page = 1, query }) => {\n  return instance.get('/search/movie', { params: { page, query } });\n};\n\nconst getMovieDetails = ({ movieId }) => {\n  return instance.get(`/movie/${movieId}`).catch(error => {\n    if ((error.response.status = 404)) {\n      throw Error(`Sorry. There is no movie with id ${movieId}`);\n    }\n\n    throw error;\n  });\n};\n\nconst getMovieCredits = ({ movieId }) => {\n  return instance.get(`/movie/${movieId}/credits`);\n};\n\nconst getMovieReviews = ({ movieId }) => {\n  return instance.get(`/movie/${movieId}/reviews`);\n};\n\nconst getPosterUrl = ({ path, size = 300, placeholder }) =>\n  path ? `https://image.tmdb.org/t/p/w${size}${path}` : placeholder;\n\nconst api = {\n  MEDIA_TYPE,\n  TIME_WINDOW,\n  getTrending,\n  getMovies,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n  getPosterUrl,\n};\n\nexport default api;\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","api","then","data","results","reviewList","map","author","content","id","className","css","length","instance","axios","baseURL","params","api_key","MEDIA_TYPE","all","movie","tv","person","TIME_WINDOW","day","week","getTrending","page","mediaType","timeWindow","get","getMovies","query","getMovieDetails","catch","error","response","status","Error","getMovieCredits","getMovieReviews","getPosterUrl","path","size","placeholder"],"sourceRoot":""}